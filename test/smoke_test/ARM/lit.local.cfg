config.substitutions.append(('%arm_triple', 'arm-linux-gnueabi'))

# Check if ARM binary raising can be done
import os, subprocess

# Check if ARM target is part of LLVM and tools build
if not 'ARM' in config.targets_to_build:
  print('*** Not testing ARM binary translation: LLVM not biult with ARM target')
  config.unsupported = True

# Else check if arm cross compiler is installed
elif config.target_triple == 'x86_64-unknown-linux-gnu':
  devnull = open(os.devnull,"w")
  arm_pkg = "gcc-arm-linux-gnueabi"
  arm_pkg_installed = subprocess.call(["dpkg","-s", arm_pkg],stdout=devnull,stderr=subprocess.STDOUT)
  if arm_pkg_installed != 0:
    print('*** Not testing ARM binary translation: ' + arm_pkg + ' package not installed')
    config.unsupported = True
  else:
    i386_pkg = "libc6-dev-i386"
    i386_pkg_installed = subprocess.call(["dpkg","-s", i386_pkg],stdout=devnull,stderr=subprocess.STDOUT)
    if i386_pkg_installed != 0:
      print('*** Not testing ARM binary translation: ' + i386_pkg + ' package not installed')
      config.unsupported = True
  devnull.close()
 